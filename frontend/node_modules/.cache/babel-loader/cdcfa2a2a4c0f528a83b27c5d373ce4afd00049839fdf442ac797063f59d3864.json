{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/volunteer/';\nexport const login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData).catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      // console.log(error.response.data.message);\n      throw new Error(error.response.data.message);\n\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    // console.log(error.config);\n  });\n\n  if (response.data) {\n    sessionStorage.setItem('user', JSON.stringify(response.data.token));\n    return response.data;\n  }\n  // console.log(response.data)\n};\n\nexport const getProfile = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + 'profile', config);\n  // console.log(response.data)\n  return response.data;\n};\nexport const getUsers = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + 'users', config);\n  // console.log(response.data)\n  return response.data;\n};\nexport const getDirectors = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + 'directors', config);\n  // console.log(response.data)\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","login","userData","response","post","catch","error","Error","data","message","request","console","log","sessionStorage","setItem","JSON","stringify","token","getProfile","config","headers","Authorization","get","getUsers","getDirectors"],"sources":["/Users/mac/Desktop/FORESE/HR_DB/frontend/src/features/users/UserServices.js"],"sourcesContent":["import axios from 'axios'\nconst API_URL = 'http://localhost:5000/api/volunteer/'\n\nexport const login = async(userData)=>{\n    const response = await axios.post(API_URL+'login',userData)\n        .catch(function(error){\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                // console.log(error.response.data.message);\n                throw new Error(error.response.data.message) \n\n                // console.log(error.response.status);\n                // console.log(error.response.headers);\n            } \n            else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                console.log(error.request);\n            } \n            else {\n                // Something happened in setting up the request that triggered an Error\n                console.log('Error', error.message);\n            }\n            // console.log(error.config);\n        })\n        if(response.data){\n            sessionStorage.setItem('user',JSON.stringify(response.data.token))\n            return response.data\n        }\n    // console.log(response.data)\n}\n\nexport const getProfile = async(token)=>{\n    const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n    }\n    const response = await axios.get(API_URL+'profile',config)\n    // console.log(response.data)\n    return response.data\n}\n\nexport const getUsers = async(token)=>{\n    const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n    }\n    const response = await axios.get(API_URL+'users',config)\n    // console.log(response.data)\n    return response.data\n}\n\nexport const getDirectors = async(token)=>{\n    const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n    }\n    const response = await axios.get(API_URL+'directors',config)\n    // console.log(response.data)\n    return response.data\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,OAAO,MAAMC,KAAK,GAAG,MAAMC,QAAQ,IAAG;EAClC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAC,OAAO,EAACE,QAAQ,CAAC,CACtDG,KAAK,CAAC,UAASC,KAAK,EAAC;IAClB,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAChB;MACA;MACA;MACA,MAAM,IAAII,KAAK,CAACD,KAAK,CAACH,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;;MAE5C;MACA;IACJ,CAAC,MACI,IAAIH,KAAK,CAACI,OAAO,EAAE;MACpB;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACI,OAAO,CAAC;IAC9B,CAAC,MACI;MACD;MACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,KAAK,CAACG,OAAO,CAAC;IACvC;IACA;EACJ,CAAC,CAAC;;EACF,IAAGN,QAAQ,CAACK,IAAI,EAAC;IACbK,cAAc,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACK,IAAI,CAACS,KAAK,CAAC,CAAC;IAClE,OAAOd,QAAQ,CAACK,IAAI;EACxB;EACJ;AACJ,CAAC;;AAED,OAAO,MAAMU,UAAU,GAAG,MAAMD,KAAK,IAAG;EACpC,MAAME,MAAM,GAAG;IACXC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACJ,CAAC;EACD,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,GAAG,CAACtB,OAAO,GAAC,SAAS,EAACmB,MAAM,CAAC;EAC1D;EACA,OAAOhB,QAAQ,CAACK,IAAI;AACxB,CAAC;AAED,OAAO,MAAMe,QAAQ,GAAG,MAAMN,KAAK,IAAG;EAClC,MAAME,MAAM,GAAG;IACXC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACJ,CAAC;EACD,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,GAAG,CAACtB,OAAO,GAAC,OAAO,EAACmB,MAAM,CAAC;EACxD;EACA,OAAOhB,QAAQ,CAACK,IAAI;AACxB,CAAC;AAED,OAAO,MAAMgB,YAAY,GAAG,MAAMP,KAAK,IAAG;EACtC,MAAME,MAAM,GAAG;IACXC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASJ,KAAM;IACjC;EACJ,CAAC;EACD,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,GAAG,CAACtB,OAAO,GAAC,WAAW,EAACmB,MAAM,CAAC;EAC5D;EACA,OAAOhB,QAAQ,CAACK,IAAI;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}